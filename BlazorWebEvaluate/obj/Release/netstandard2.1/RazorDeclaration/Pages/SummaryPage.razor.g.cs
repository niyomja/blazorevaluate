// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorWebEvaluate.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using BlazorWebEvaluate;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using BlazorWebEvaluate.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/_Imports.razor"
using BlazorWebEvaluate.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Summary")]
    public partial class SummaryPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 90 "/Users/niyom/Repository/blazorevaluate/BlazorWebEvaluate/Pages/SummaryPage.razor"
       
    private Assessor assessor;
    private Evaluate evaluate;
    private List<EvaluateData> evaluateList;
    protected override async Task OnInitializedAsync()
    {
        evaluate = new Evaluate();
        evaluate.full_name = await sessionStorage.GetItemAsync<string>("full_name");
        evaluate.level = await sessionStorage.GetItemAsync<string>("level");

        // 1 )
        evaluate.leadership = new LeadershipData();
        evaluate.leadership.level1 = new Level();
        evaluate.leadership.level3 = new Level();
        evaluate.leadership.level5 = new Level();

        evaluate.leadership.level1.c1 = await sessionStorage.GetItemAsync<bool>("level1.c1");
        evaluate.leadership.level1.c2 = await sessionStorage.GetItemAsync<bool>("level1.c2");
        evaluate.leadership.level1.c3 = await sessionStorage.GetItemAsync<bool>("level1.c3");

        evaluate.leadership.level3.c1 = await sessionStorage.GetItemAsync<bool>("level3.c1");
        evaluate.leadership.level3.c2 = await sessionStorage.GetItemAsync<bool>("level3.c2");
        evaluate.leadership.level3.c3 = await sessionStorage.GetItemAsync<bool>("level3.c3");

        evaluate.leadership.level5.c1 = await sessionStorage.GetItemAsync<bool>("level5.c1");
        evaluate.leadership.level5.c2 = await sessionStorage.GetItemAsync<bool>("level5.c2");
        evaluate.leadership.level5.c3 = await sessionStorage.GetItemAsync<bool>("level5.c3");
        evaluate.leadership.level5.c4 = await sessionStorage.GetItemAsync<bool>("level5.c4");

        // 2 )
        evaluate.businessManagement = new  BusinessManagementData();
        evaluate.businessManagement.level1 = new Level();
        evaluate.businessManagement.level3 = new Level();
        evaluate.businessManagement.level5 = new Level();

        evaluate.businessManagement.level1.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c1");
        evaluate.businessManagement.level1.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c2");
        evaluate.businessManagement.level1.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c3");
        evaluate.businessManagement.level1.c4 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c4");

        evaluate.businessManagement.level3.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c1");
        evaluate.businessManagement.level3.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c2");
        evaluate.businessManagement.level3.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c3");

        evaluate.businessManagement.level5.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c1");
        evaluate.businessManagement.level5.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c2");
        evaluate.businessManagement.level5.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c3");
        evaluate.businessManagement.level5.c4 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c4");

        // 3 )
        evaluate.changeCatalyst = new ChangeCatalystData();
        evaluate.changeCatalyst.level1 = new Level();
        evaluate.changeCatalyst.level3 = new Level();
        evaluate.changeCatalyst.level5 = new Level();

        evaluate.changeCatalyst.level1.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c1");
        evaluate.changeCatalyst.level1.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c2");
        evaluate.changeCatalyst.level1.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c3");
        evaluate.changeCatalyst.level1.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c4");
        evaluate.changeCatalyst.level1.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c5");

        evaluate.changeCatalyst.level3.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c1");
        evaluate.changeCatalyst.level3.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c2");
        evaluate.changeCatalyst.level3.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c3");
        evaluate.changeCatalyst.level3.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c4");
        evaluate.changeCatalyst.level3.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c5");

        evaluate.changeCatalyst.level5.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c1");
        evaluate.changeCatalyst.level5.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c2");
        evaluate.changeCatalyst.level5.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c3");
        evaluate.changeCatalyst.level5.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c4");
        evaluate.changeCatalyst.level5.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c5");

        // 4 )
        evaluate.cSRforSustainable = new CSRforSustainableData();
        evaluate.cSRforSustainable.level1 = new Level();
        evaluate.cSRforSustainable.level3 = new Level();
        evaluate.cSRforSustainable.level5 = new Level();

        evaluate.cSRforSustainable.level1.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c1");
        evaluate.cSRforSustainable.level1.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c2");
        evaluate.cSRforSustainable.level1.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c3");
        evaluate.cSRforSustainable.level1.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c4");

        evaluate.cSRforSustainable.level3.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c1");
        evaluate.cSRforSustainable.level3.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c2");
        evaluate.cSRforSustainable.level3.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c3");
        evaluate.cSRforSustainable.level3.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c4");

        evaluate.cSRforSustainable.level5.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c1");
        evaluate.cSRforSustainable.level5.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c2");
        evaluate.cSRforSustainable.level5.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c3");
        evaluate.cSRforSustainable.level5.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c4");


        assessor = new Assessor();
        assessor.code =  await sessionStorage.GetItemAsync<string>("assessor.code");
        assessor.full_name =  await sessionStorage.GetItemAsync<string>("assessor.full_name");
        assessor.division = await sessionStorage.GetItemAsync<string>("assessor.division");
        assessor.level = await sessionStorage.GetItemAsync<string>("assessor.level");

        evaluate.assessor = assessor;

        if(!String.IsNullOrEmpty(evaluate.full_name)){

            var response = await Http.PostAsJsonAsync<Evaluate>("/ajax/postdata.php", evaluate);

            if(response.IsSuccessStatusCode){
                await sessionStorage.ClearAsync();

                await sessionStorage.SetItemAsync("assessor.code", assessor.code);
                await sessionStorage.SetItemAsync("assessor.full_name", assessor.full_name);
                await sessionStorage.SetItemAsync("assessor.division", assessor.division);
                await sessionStorage.SetItemAsync("assessor.level", assessor.level);
            }
        }

        string url = "/ajax/getdata.php?assessor_code=" + assessor.code;

        evaluateList = await Http.GetFromJsonAsync<List<EvaluateData>>(url);

        await base.OnParametersSetAsync();
    }

    void gotoBack()
    {
        NavigationManager.NavigateTo("");
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
