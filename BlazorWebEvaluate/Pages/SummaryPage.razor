@page "/Summary"
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HttpClient Http

<h3>Summary</h3>

<div class="row">
    <div class="col-lg-12">
        <h4 class="mt-5 mb-2">ตารางสรุปผลการประเมิน</h4>
        @if(assessor != null && !String.IsNullOrEmpty(assessor.full_name)){
            <span class="mt-2 mb-2">ผู้ประเมิน @(assessor.full_name)</span>
        }
        <div class="table-responsive">
            <table class="table table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th colspan="4"><img src="img/logo.png" /></th>
                        <th colspan="2" class="text-center">มีภาวะผู้นำ (Leadership) </th>
                        <th colspan="2" class="text-center">การบริหารจัดการธุรกิจยอดเยี่ยม (Business Management) </th>
                        <th colspan="2" class="text-center">สร้างสรรค์การเปลี่ยนแปลง (Change Catalyst) </th>
                        <th colspan="2" class="text-center">ความรับผิดชอบของสังคมต่อกิจการ (CSR for Sustainable) </th>
                    </tr>
                    <tr>
                        <th>No.</th>
                        <th>ชื่อ สกุล</th>
                        <th>Level</th>
                        <th>ค่าคาดหวัง</th>
                        <th>คะแนนประเมิน</th>
                        <th>ผลการประเมิน</th>
                        <th>คะแนนประเมิน</th>
                        <th>ผลการประเมิน</th>
                        <th>คะแนนประเมิน</th>
                        <th>ผลการประเมิน</th>
                        <th>คะแนนประเมิน</th>
                        <th>ผลการประเมิน</th>
                    </tr>
                </thead>
            @if(evaluateList !=null){
                <tbody>
                @if(evaluateList.Count() > 0){
                    @for (int i=0;i<evaluateList.Count();i++)
                    {
                    <tr>
                        <td class="text-center">@(1 + i).</td>
                        <td>@(evaluateList[i].full_name)</td>
                        <td class="text-center">@(evaluateList[i].top_level)</td>
                        <td class="text-center">@(evaluateList[i].Max())</td>
                        
                        <td class="text-center">@(evaluateList[i].leadership_Scroll())</td>
                        <td class="text-center">@((evaluateList[i].leadership_Scroll() - evaluateList[i].Max()))</td>
                        
                        <td class="text-center">@(evaluateList[i].businessManagement_Scroll())</td>
                        <td class="text-center"> @((evaluateList[i].businessManagement_Scroll() - evaluateList[i].Max())) </td>

                        <td class="text-center"> @(evaluateList[i].changeCatalyst_Scroll()) </td>
                        <td class="text-center"> @((evaluateList[i].changeCatalyst_Scroll() - evaluateList[i].Max())) </td>

                        <td class="text-center"> @(evaluateList[i].cSRforSustainable_Scroll()) </td>
                        <td class="text-center"> @((evaluateList[i].cSRforSustainable_Scroll() - evaluateList[i].Max())) </td>

                    </tr>
                    }
                }else{
                    <tr>
                        <td colspan="16" class="text-center">
                            <span class="text-mute">No data to display.</span>
                        </td>
                    </tr>
                }
                </tbody>
            }else{
                    <tbody>
                        <tr>
                            <td colspan="16" class="text-center">
                                <div class="spinner-border m-5 text-center" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
            }
            </table>
        </div>

        <button @onclick="gotoBack" type="button" class="btn btn-success mt-5">&nbsp;&nbsp;Home&nbsp;&nbsp;</button>
    </div>
</div>

@code {
    private Assessor assessor;
    private Evaluate evaluate;
    private List<EvaluateData> evaluateList;
    protected override async Task OnInitializedAsync()
    {
        evaluate = new Evaluate();
        evaluate.full_name = await sessionStorage.GetItemAsync<string>("full_name");
        evaluate.level = await sessionStorage.GetItemAsync<string>("level");

        // 1 )
        evaluate.leadership = new LeadershipData();
        evaluate.leadership.level1 = new Level();
        evaluate.leadership.level3 = new Level();
        evaluate.leadership.level5 = new Level();

        evaluate.leadership.level1.c1 = await sessionStorage.GetItemAsync<bool>("level1.c1");
        evaluate.leadership.level1.c2 = await sessionStorage.GetItemAsync<bool>("level1.c2");
        evaluate.leadership.level1.c3 = await sessionStorage.GetItemAsync<bool>("level1.c3");

        evaluate.leadership.level3.c1 = await sessionStorage.GetItemAsync<bool>("level3.c1");
        evaluate.leadership.level3.c2 = await sessionStorage.GetItemAsync<bool>("level3.c2");
        evaluate.leadership.level3.c3 = await sessionStorage.GetItemAsync<bool>("level3.c3");

        evaluate.leadership.level5.c1 = await sessionStorage.GetItemAsync<bool>("level5.c1");
        evaluate.leadership.level5.c2 = await sessionStorage.GetItemAsync<bool>("level5.c2");
        evaluate.leadership.level5.c3 = await sessionStorage.GetItemAsync<bool>("level5.c3");
        evaluate.leadership.level5.c4 = await sessionStorage.GetItemAsync<bool>("level5.c4");

        // 2 )
        evaluate.businessManagement = new  BusinessManagementData();
        evaluate.businessManagement.level1 = new Level();
        evaluate.businessManagement.level3 = new Level();
        evaluate.businessManagement.level5 = new Level();

        evaluate.businessManagement.level1.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c1");
        evaluate.businessManagement.level1.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c2");
        evaluate.businessManagement.level1.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c3");
        evaluate.businessManagement.level1.c4 = await sessionStorage.GetItemAsync<bool>("businessManagement.level1.c4");

        evaluate.businessManagement.level3.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c1");
        evaluate.businessManagement.level3.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c2");
        evaluate.businessManagement.level3.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level3.c3");

        evaluate.businessManagement.level5.c1 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c1");
        evaluate.businessManagement.level5.c2 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c2");
        evaluate.businessManagement.level5.c3 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c3");
        evaluate.businessManagement.level5.c4 = await sessionStorage.GetItemAsync<bool>("businessManagement.level5.c4");

        // 3 )
        evaluate.changeCatalyst = new ChangeCatalystData();
        evaluate.changeCatalyst.level1 = new Level();
        evaluate.changeCatalyst.level3 = new Level();
        evaluate.changeCatalyst.level5 = new Level();

        evaluate.changeCatalyst.level1.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c1");
        evaluate.changeCatalyst.level1.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c2");
        evaluate.changeCatalyst.level1.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c3");
        evaluate.changeCatalyst.level1.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c4");
        evaluate.changeCatalyst.level1.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level1.c5");

        evaluate.changeCatalyst.level3.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c1");
        evaluate.changeCatalyst.level3.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c2");
        evaluate.changeCatalyst.level3.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c3");
        evaluate.changeCatalyst.level3.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c4");
        evaluate.changeCatalyst.level3.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level3.c5");

        evaluate.changeCatalyst.level5.c1 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c1");
        evaluate.changeCatalyst.level5.c2 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c2");
        evaluate.changeCatalyst.level5.c3 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c3");
        evaluate.changeCatalyst.level5.c4 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c4");
        evaluate.changeCatalyst.level5.c5 = await sessionStorage.GetItemAsync<bool>("changeCatalyst.level5.c5");

        // 4 )
        evaluate.cSRforSustainable = new CSRforSustainableData();
        evaluate.cSRforSustainable.level1 = new Level();
        evaluate.cSRforSustainable.level3 = new Level();
        evaluate.cSRforSustainable.level5 = new Level();

        evaluate.cSRforSustainable.level1.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c1");
        evaluate.cSRforSustainable.level1.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c2");
        evaluate.cSRforSustainable.level1.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c3");
        evaluate.cSRforSustainable.level1.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level1.c4");

        evaluate.cSRforSustainable.level3.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c1");
        evaluate.cSRforSustainable.level3.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c2");
        evaluate.cSRforSustainable.level3.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c3");
        evaluate.cSRforSustainable.level3.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level3.c4");

        evaluate.cSRforSustainable.level5.c1 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c1");
        evaluate.cSRforSustainable.level5.c2 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c2");
        evaluate.cSRforSustainable.level5.c3 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c3");
        evaluate.cSRforSustainable.level5.c4 = await sessionStorage.GetItemAsync<bool>("cSRforSustainable.level5.c4");


        assessor = new Assessor();
        assessor.code =  await sessionStorage.GetItemAsync<string>("assessor.code");
        assessor.full_name =  await sessionStorage.GetItemAsync<string>("assessor.full_name");
        assessor.division = await sessionStorage.GetItemAsync<string>("assessor.division");
        assessor.level = await sessionStorage.GetItemAsync<string>("assessor.level");

        evaluate.assessor = assessor;

        if(!String.IsNullOrEmpty(evaluate.full_name)){

            var response = await Http.PostAsJsonAsync<Evaluate>("/ajax/postdata.php", evaluate);

            if(response.IsSuccessStatusCode){
                await sessionStorage.ClearAsync();

                await sessionStorage.SetItemAsync("assessor.code", assessor.code);
                await sessionStorage.SetItemAsync("assessor.full_name", assessor.full_name);
                await sessionStorage.SetItemAsync("assessor.division", assessor.division);
                await sessionStorage.SetItemAsync("assessor.level", assessor.level);
            }
        }

        string url = "/ajax/getdata.php?assessor_code=" + assessor.code;

        evaluateList = await Http.GetFromJsonAsync<List<EvaluateData>>(url);

        await base.OnParametersSetAsync();
    }

    void gotoBack()
    {
        NavigationManager.NavigateTo("");
    }
}
